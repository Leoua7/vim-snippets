priority -60


##############
# NICE BOXES #
##############
global !p
from vimsnippets import foldmarker, make_box, get_comment_format
endglobal




snippet box "A nice box with the current comment symbol" b
`!p
box = make_box(len(t[1]))
snip.rv = box[0]
snip += box[1]
`${1:${VISUAL:content}}`!p
box = make_box(len(t[1]))
snip.rv = box[2]
snip += box[3]`
$0
endsnippet

snippet bbox "A nice box over the full width" b
`!p
if not snip.c:
	width = int(vim.eval("&textwidth - (virtcol('.') == 1 ? 0 : virtcol('.'))")) or 71
box = make_box(len(t[1]), width)
snip.rv = box[0]
snip += box[1]
`${1:${VISUAL:content}}`!p
box = make_box(len(t[1]), width)
snip.rv = box[2]
snip += box[3]`
$0
endsnippet

snippet \img "codecogs的云服务，api+一大串LaTex" iA
<img src="http://latex.codecogs.com/gif.latex?$1" />
$0
endsnippet

snippet fold "Insert a vim fold marker" b
`!p snip.rv = get_comment_format()[0]` ${1:Fold description} `!p snip.rv = foldmarker()[0]`${2:1} `!p snip.rv = get_comment_format()[2]`
endsnippet

snippet foldc "Insert a vim fold close marker" b
`!p snip.rv = get_comment_format()[0]` ${2:1}`!p snip.rv = foldmarker()[1]` `!p snip.rv = get_comment_format()[2]`
endsnippet

snippet foldp "Insert a vim fold marker pair" b
`!p snip.rv = get_comment_format()[0]` ${1:Fold description} `!p snip.rv = foldmarker()[0]` `!p snip.rv = get_comment_format()[2]`
${2:${VISUAL:Content}}
`!p snip.rv = get_comment_format()[0]` `!p snip.rv = foldmarker()[1]` $1 `!p snip.rv = get_comment_format()[2]`
endsnippet

##########################
# VIM MODELINE GENERATOR #
##########################
# See advice on `:help 'tabstop'` for why these values are set. Uses second
# modeline form ('set') to work in languages with comment terminators
# (/* like C */).
snippet modeline "Vim modeline"
vim`!v ':set '. (&expandtab ? printf('et sw=%i ts=%i', &sw, &ts) : printf('noet sts=%i sw=%i ts=%i', &sts, &sw, &ts)) . (&tw ? ' tw='. &tw : '') . ':'`
endsnippet



#### Wolfram Mathematica
priority 1000
snippet math "mathematica block" w
math $1 math$0
endsnippet

priority 10000
snippet 'math(.*)math' "evaluate mathematica" wr
`!p
import subprocess
code = 'ToString[' + match.group(1) + ', TeXForm]'
snip.rv = subprocess.check_output(['wolframscript', '-code', code])
`
endsnippet

## Latex Start
snippet \doc "Late" bA
\documentclass[UTF8]{ctex$1}
$0
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
    $0
\end{$1}
endsnippet




### personl
snippet sign "Signature" w
Gyanlei Yao
endsnippet



snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[
$1
.\] $0
endsnippet

snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

snippet sr "^2" iA
^2
endsnippet

snippet cb "^3" iA
^3
endsnippet

snippet td "superscript" iA
^{$1}$0
endsnippet

snippet Td "" iA
_{$1}$0
endsnippet

#分数START
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction_2" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

priority 1000
snippet '^.*\)/' "() Fraction_3" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

snippet / "Fractio_4" i 
\\frac{${VISUAL}}{$1}$0
endsnippet
#分数END


snippet { "{ }" iA
{$1}$0
endsnippet

snippet [ "[ ]" iA
[$1]$0
endsnippet

snippet ( "( )" iA
($1)$0
endsnippet

snippet doc "document" i
document
endsnippet
snippet \} "" iA
\left\\{$1\right\\}$0
endsnippet

snippet \intt "积分" iA
\\$1int_{$2}^{$3} $4 \mathrm{d} $0
endsnippet
snippet Intergate "不定积分" i
\int$1 \mathrm{d} $0
endsnippet

snippet sy "expression" iA
(x,y)
endsnippet
snippet sz "expression" iA
(x,y,z)
endsnippet

snippet \math "直立体" iA
\math${1:rm}{d} 
endsnippet

snippet \' "" iA
^{\prime}($1)$0
endsnippet

snippet rome "罗马数字" iA
\romannumeral
endsnippet

snippet Rome "大写罗马数字" iA
\uppercase\expandafter{\romannumeral$1}$0
endsnippet

snippet \timeold "英文时间格式" bA
\CTEXoptions[today=old]
endsnippet


snippet \page "页面占比80%" bA
\usepackage[a4paper,scale=0.8]{geometry}
$0
endsnippet

snippet \handpage "手动设定页面占比" bA
\usepackage[a4paper,left=10mm,right=10mm,top=15mm,bottom=15mm]{geometry}
$0
endsnippet
